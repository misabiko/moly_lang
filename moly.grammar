@top Program { statement+ }

@skip { whitespace | LineComment }

statement {
	Let |
	Return |
	expression |
	Function |
	WhileStatement { kw<"while"> expression "{" statement* "}" }
}

expression {
	Identifier |
	String |
	Boolean |
	"(" expression ")"
}

Let { kw<"let"> Identifier "=" expression }

Return { kw<"return"> expression }

Boolean { kw<"true"> | kw<"false"> }

Function { kw<"fn"> Identifier? "(" commaSep<Identifier Identifier> ")" "{" "}" }

@tokens {
	Identifier { $[a-zA-Z_]$[a-zA-Z_0-9]* }

	String { '"' (!["\\] | "\\" _)* '"' }

	LineComment { "//" ![\n]* }

	whitespace { $[ \t\n\r]+ }

	"(" ")"
}

kw<term> { @specialize<Identifier, term> }

commaSep<content> {
  "" | content ("," content?)*
}

@detectDelim